version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    ports:
      - "${PORT}:${PORT}"
      - "${METRICS_PORT}:${METRICS_PORT}"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    command: ["air", "-c", ".air.toml"]
    environment:
      - DATABASE_DSN=${DB_USER}:${DB_PASSWORD}@tcp(${DB_HOST}:${DB_PORT})/${DB_NAME}?parseTime=true
      - DB_USER=mysql
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=${DB_NAME}
    volumes:
      - .:/app

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=mysql
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p$DB_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql_data:/var/lib/mysql

  prometheus:
    image: prom/prometheus
    ports:
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  jaeger:
    image: jaegertracing/all-in-one:1.52
    ports:
      - "${JAEGER_UI_PORT}:${JAEGER_UI_PORT}"
      - "${JAEGER_OTLP_PORT}:${JAEGER_OTLP_PORT}"   
  grafana:
    image: grafana/grafana
    ports:
      - "${GRAFANA_PORT}:${GRAFANA_PORT}"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana

  redis:
    image: redis:7
    restart: always
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data

  migrate:
    image: migrate/migrate:latest
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    entrypoint: ["migrate"]
    command:
      [
        "-path", "/migrations",
        "-database", "mysql://${DB_USER}:${DB_PASSWORD}@tcp(${DB_HOST}:${DB_PORT})/${DB_NAME}?multiStatements=true",
        "up"
      ]

volumes:
  mysql_data:
  redis_data:
  grafana_data: